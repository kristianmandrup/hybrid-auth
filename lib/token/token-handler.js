// Generated by CoffeeScript 1.8.0
(function() {
  var Registry, TokenHandler;

  TokenHandler = (function() {
    function TokenHandler(authProviderName, _native) {
      this.authProviderName = authProviderName;
      this["native"] = _native != null ? _native : false;
    }

    TokenHandler.prototype.authHandler = function(authObj) {
      return console.log('received authObj', authObj);
    };

    TokenHandler.prototype.setAuthHandler = function(authHandler) {
      this.authHandler = authHandler;
    };

    TokenHandler.prototype.tokenReceived = function(token) {
      throw Error("TokenHandler subclass must implement tokenReceived");
    };

    TokenHandler.prototype.tokenError = function(error) {
      var include;
      console.log('Could not get access token', error);
      return include = require('./xtender').include;
    };

    return TokenHandler;

  })();

  Registry = require('registry');

  include(Authenticator.prototype, Registry);

  TokenHandler.prototype = xtend(TokenHandler.prototype, Registry);

  module.exports = TokenHandler;

}).call(this);

//# sourceMappingURL=token-handler.js.map
